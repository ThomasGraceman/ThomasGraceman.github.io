/* Ultra Cool Cyberpunk Problems Page CSS - Enhanced Edition */

@import url('https://fonts.googleapis.com/css2?family=Orbitron:wght@400;700;900&family=JetBrains+Mono:wght@400;600;700&family=Inter:wght@300;400;500;600;700&display=swap');

/* Enhanced custom properties for the cyberpunk theme */
:root {
  --neon-blue: #00ffff;
  --neon-pink: #ff00ff;
  --neon-green: #39ff14;
  --neon-orange: #ff6600;
  --neon-purple: #8a2be2;
  --neon-yellow: #ffff00;
  --dark-bg: #0a0a0a;
  --card-bg: rgba(20, 20, 20, 0.95);
  --glass-border: rgba(255, 255, 255, 0.1);
  --glass-bg: rgba(255, 255, 255, 0.05);
  --shadow-neon: 0 0 20px rgba(0, 255, 255, 0.3);
  --shadow-neon-pink: 0 0 20px rgba(255, 0, 255, 0.3);
  --shadow-neon-green: 0 0 20px rgba(57, 255, 20, 0.3);
  --shadow-neon-orange: 0 0 20px rgba(255, 102, 0, 0.3);
}

/* Enhanced animated background with particle effects */
.problems-container {
  min-height: 100vh;
  padding: 2rem 1rem;
  background: 
    linear-gradient(45deg, transparent 30%, rgba(0, 255, 255, 0.03) 30%, rgba(0, 255, 255, 0.03) 70%, transparent 70%),
    linear-gradient(-45deg, transparent 30%, rgba(255, 0, 255, 0.03) 30%, rgba(255, 0, 255, 0.03) 70%, transparent 70%),
    radial-gradient(circle at 20% 50%, rgba(57, 255, 20, 0.1) 0%, transparent 70%),
    radial-gradient(circle at 80% 20%, rgba(255, 102, 0, 0.1) 0%, transparent 70%),
    radial-gradient(circle at 50% 80%, rgba(138, 43, 226, 0.08) 0%, transparent 70%),
    #0a0a0a;
  background-size: 60px 60px, 60px 60px, 100% 100%, 100% 100%, 100% 100%, 100% 100%;
  animation: backgroundShift 20s ease-in-out infinite;
  position: relative;
}

.problems-container::before {
  content: '';
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: 
    repeating-linear-gradient(
      90deg,
      transparent,
      transparent 98px,
      rgba(0, 255, 255, 0.03) 100px
    );
  pointer-events: none;
  z-index: -1;
}

.problems-container::after {
  content: '';
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-image: 
    radial-gradient(2px 2px at 20px 30px, var(--neon-blue), transparent),
    radial-gradient(2px 2px at 40px 70px, var(--neon-pink), transparent),
    radial-gradient(1px 1px at 90px 40px, var(--neon-green), transparent),
    radial-gradient(1px 1px at 130px 80px, var(--neon-orange), transparent),
    radial-gradient(2px 2px at 160px 30px, var(--neon-purple), transparent);
  background-repeat: repeat;
  background-size: 200px 100px, 300px 150px, 400px 200px, 250px 120px, 350px 180px;
  animation: particleFloat 15s linear infinite;
  opacity: 0.3;
  pointer-events: none;
  z-index: -1;
}

@keyframes backgroundShift {
  0%, 100% { background-position: 0% 0%, 0% 0%, 0% 0%, 0% 0%, 0% 0%; }
  50% { background-position: 100% 100%, -100% -100%, 50% 50%, -50% -50%, 25% 75%; }
}

@keyframes particleFloat {
  0% { transform: translateY(0px) translateX(0px); }
  25% { transform: translateY(-10px) translateX(5px); }
  50% { transform: translateY(-20px) translateX(-5px); }
  75% { transform: translateY(-10px) translateX(10px); }
  100% { transform: translateY(0px) translateX(0px); }
}

/* Enhanced main title styling with 3D effects */
.problems-container h1 {
  font-family: 'Orbitron', monospace;
  font-weight: 900;
  font-size: clamp(2.5rem, 5vw, 4rem);
  text-align: center;
  margin-bottom: 3rem;
  background: linear-gradient(45deg, var(--neon-blue), var(--neon-pink), var(--neon-green), var(--neon-purple));
  background-size: 400% 400%;
  -webkit-background-clip: text;
  background-clip: text;
  -webkit-text-fill-color: transparent;
  animation: gradientShift 4s ease-in-out infinite alternate;
  text-shadow: 
    0 0 30px rgba(0, 255, 255, 0.5),
    0 0 60px rgba(0, 255, 255, 0.3),
    0 0 90px rgba(0, 255, 255, 0.1);
  position: relative;
  letter-spacing: 2px;
}

.problems-container h1::before {
  content: attr(data-text);
  position: absolute;
  top: 2px;
  left: 2px;
  background: linear-gradient(45deg, var(--neon-blue), var(--neon-pink));
  -webkit-background-clip: text;
  background-clip: text;
  -webkit-text-fill-color: transparent;
  opacity: 0.3;
  filter: blur(1px);
  z-index: -1;
}

.problems-container h1::after {
  content: '';
  position: absolute;
  bottom: -15px;
  left: 50%;
  transform: translateX(-50%);
  width: 250px;
  height: 3px;
  background: linear-gradient(90deg, 
    transparent, 
    var(--neon-blue), 
    var(--neon-pink), 
    var(--neon-green), 
    transparent
  );
  animation: pulse 2s infinite;
  border-radius: 2px;
  box-shadow: 0 0 20px rgba(0, 255, 255, 0.5);
}

@keyframes gradientShift {
  0% { background-position: 0% 50%; }
  25% { background-position: 100% 50%; }
  50% { background-position: 100% 100%; }
  75% { background-position: 0% 100%; }
  100% { background-position: 0% 50%; }
}

/* Enhanced problem cards with advanced holographic effects */
.problem-card {
  background: var(--card-bg);
  border: 1px solid var(--glass-border);
  border-radius: 25px;
  padding: 3rem;
  margin-bottom: 2.5rem;
  position: relative;
  overflow: hidden;
  backdrop-filter: blur(25px);
  transition: all 0.5s cubic-bezier(0.23, 1, 0.320, 1);
  font-family: 'JetBrains Mono', monospace;
  box-shadow: 
    0 10px 30px rgba(0, 0, 0, 0.3),
    inset 0 1px 0 rgba(255, 255, 255, 0.1);
}

.problem-card::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  border-radius: 25px;
  padding: 3px;
  background: linear-gradient(45deg, 
    var(--neon-blue), 
    var(--neon-pink), 
    var(--neon-green), 
    var(--neon-orange),
    var(--neon-purple),
    var(--neon-blue)
  );
  background-size: 400% 400%;
  animation: holographicBorder 6s linear infinite;
  mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
  mask-composite: xor;
  -webkit-mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
  -webkit-mask-composite: xor;
  opacity: 0;
  transition: opacity 0.4s ease;
}

.problem-card::after {
  content: '';
  position: absolute;
  top: -3px;
  left: -100%;
  width: 100%;
  height: 3px;
  background: linear-gradient(90deg, 
    transparent, 
    var(--neon-blue), 
    var(--neon-pink), 
    var(--neon-green), 
    transparent
  );
  transition: left 0.8s ease;
  box-shadow: 0 0 20px rgba(0, 255, 255, 0.5);
}

.problem-card:hover {
  transform: translateY(-15px) scale(1.03);
  box-shadow: 
    0 25px 50px rgba(0, 0, 0, 0.6),
    0 0 40px rgba(0, 255, 255, 0.4),
    inset 0 0 40px rgba(0, 255, 255, 0.15);
}

.problem-card:hover::before {
  opacity: 1;
}

.problem-card:hover::after {
  left: 100%;
}

.problem-card:hover::before {
  animation: glitchEffect 0.3s infinite;
}

@keyframes holographicBorder {
  0% { background-position: 0% 50%; }
  25% { background-position: 100% 50%; }
  50% { background-position: 100% 100%; }
  75% { background-position: 0% 100%; }
  100% { background-position: 0% 50%; }
}

@keyframes glitchEffect {
  0% { transform: translate(0); }
  20% { transform: translate(-2px, 2px); }
  40% { transform: translate(-2px, -2px); }
  60% { transform: translate(2px, 2px); }
  80% { transform: translate(2px, -2px); }
  100% { transform: translate(0); }
}

/* Header styling */
.problem-header {
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
  margin-bottom: 1.5rem;
  flex-wrap: wrap;
  gap: 1rem;
}

.problem-title {
  font-family: 'Orbitron', monospace;
  font-weight: 700;
  font-size: 1.5rem;
  margin: 0;
  color: #ffffff;
  text-shadow: 0 0 10px rgba(0, 255, 255, 0.5);
  flex: 1;
  min-width: 250px;
}

.problem-title::before {
  content: 'â—† ';
  color: var(--neon-blue);
  animation: pulse 2s infinite;
}

/* Enhanced difficulty badges */
.problem-difficulty {
  padding: 0.5rem 1rem;
  border-radius: 25px;
  font-family: 'Orbitron', monospace;
  font-weight: 700;
  font-size: 0.8rem;
  text-transform: uppercase;
  letter-spacing: 1px;
  position: relative;
  overflow: hidden;
  border: 2px solid;
  background: transparent;
}

.problem-difficulty::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
  transition: left 0.5s ease;
}

.problem-difficulty:hover::before {
  left: 100%;
}

.difficulty-easy {
  color: var(--neon-green);
  border-color: var(--neon-green);
  box-shadow: 0 0 15px rgba(57, 255, 20, 0.3);
}

.difficulty-medium {
  color: var(--neon-orange);
  border-color: var(--neon-orange);
  box-shadow: 0 0 15px rgba(255, 102, 0, 0.3);
}

.difficulty-hard {
  color: var(--neon-pink);
  border-color: var(--neon-pink);
  box-shadow: 0 0 15px rgba(255, 0, 255, 0.3);
}

.difficulty-extreme {
  color: #ff0040;
  border-color: #ff0040;
  box-shadow: 0 0 20px rgba(255, 0, 64, 0.4);
  animation: extremePulse 1.5s infinite alternate;
}

@keyframes extremePulse {
  0% { 
    box-shadow: 0 0 20px rgba(255, 0, 64, 0.4);
    text-shadow: 0 0 10px rgba(255, 0, 64, 0.8);
  }
  100% { 
    box-shadow: 0 0 30px rgba(255, 0, 64, 0.8);
    text-shadow: 0 0 20px rgba(255, 0, 64, 1);
  }
}

/* Description text */
.problem-description {
  color: #e0e0e0;
  line-height: 1.7;
  font-size: 1rem;
  margin-bottom: 1.5rem;
}

.problem-description p {
  margin-bottom: 1rem;
}

/* Enhanced mathematical content styling */
.problem-math {
  background: linear-gradient(135deg, 
    rgba(0, 255, 255, 0.1), 
    rgba(255, 0, 255, 0.1),
    rgba(57, 255, 20, 0.1)
  );
  border: 2px solid rgba(0, 255, 255, 0.4);
  border-radius: 20px;
  padding: 2rem;
  margin: 2rem 0;
  text-align: center;
  font-size: 1.2rem;
  color: #ffffff;
  position: relative;
  backdrop-filter: blur(15px);
  box-shadow: 
    0 10px 30px rgba(0, 0, 0, 0.3),
    inset 0 1px 0 rgba(255, 255, 255, 0.1);
}

.problem-math::before {
  content: '';
  position: absolute;
  top: -2px;
  left: -2px;
  right: -2px;
  bottom: -2px;
  background: linear-gradient(45deg, 
    var(--neon-blue), 
    var(--neon-pink), 
    var(--neon-green), 
    var(--neon-orange)
  );
  border-radius: 20px;
  z-index: -1;
  opacity: 0;
  transition: opacity 0.3s ease;
  animation: holographicBorder 4s linear infinite;
}

.problem-math:hover::before {
  opacity: 0.3;
}

.problem-math .math-symbol {
  color: var(--neon-blue);
  text-shadow: 0 0 10px rgba(0, 255, 255, 0.5);
  font-weight: 600;
}

.problem-math .formula {
  background: rgba(0, 255, 255, 0.1);
  padding: 0.5rem 1rem;
  border-radius: 10px;
  border: 1px solid rgba(0, 255, 255, 0.3);
  margin: 0.5rem 0;
  display: inline-block;
}

/* Metadata section */
.problem-meta {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-top: 2rem;
  padding-top: 1.5rem;
  border-top: 1px solid rgba(0, 255, 255, 0.2);
  flex-wrap: wrap;
  gap: 1rem;
  font-size: 0.9rem;
}

.problem-category {
  background: linear-gradient(45deg, rgba(0, 255, 255, 0.2), rgba(57, 255, 20, 0.2));
  border: 1px solid rgba(0, 255, 255, 0.4);
  padding: 0.4rem 1rem;
  border-radius: 15px;
  color: var(--neon-blue);
  font-weight: 600;
  font-family: 'Orbitron', monospace;
  text-transform: uppercase;
  letter-spacing: 0.5px;
  transition: all 0.3s ease;
}

.problem-category:hover {
  background: linear-gradient(45deg, rgba(0, 255, 255, 0.3), rgba(57, 255, 20, 0.3));
  transform: translateY(-2px);
  box-shadow: 0 5px 15px rgba(0, 255, 255, 0.3);
}

.problem-date {
  color: rgba(255, 255, 255, 0.7);
  font-family: 'JetBrains Mono', monospace;
}

.problem-reward {
  background: linear-gradient(45deg, #ffd700, #ffed4a);
  color: #000;
  padding: 0.5rem 1rem;
  border-radius: 20px;
  font-weight: 700;
  font-family: 'Orbitron', monospace;
  animation: rewardGlow 2s ease-in-out infinite alternate;
  border: 2px solid #ffd700;
  box-shadow: 0 0 20px rgba(255, 215, 0, 0.5);
}

.problem-reward::before {
  content: 'ðŸ’Ž ';
  margin-right: 0.5rem;
}

@keyframes rewardGlow {
  0% { 
    box-shadow: 0 0 20px rgba(255, 215, 0, 0.5);
    text-shadow: 0 0 10px rgba(255, 215, 0, 0.8);
  }
  100% { 
    box-shadow: 0 0 30px rgba(255, 215, 0, 0.8);
    text-shadow: 0 0 20px rgba(255, 215, 0, 1);
  }
}

@keyframes pulse {
  0% { opacity: 1; }
  50% { opacity: 0.7; }
  100% { opacity: 1; }
}

/* Enhanced code blocks */
.problem-card pre {
  background: linear-gradient(135deg, #1a1a1a, #2a2a2a);
  border: 1px solid var(--neon-blue);
  border-radius: 15px;
  padding: 1.5rem;
  margin: 1.5rem 0;
  position: relative;
  overflow: hidden;
}

.problem-card pre::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 3px;
  background: linear-gradient(90deg, 
    var(--neon-blue), 
    var(--neon-pink), 
    var(--neon-green)
  );
}

.problem-card pre code {
  color: #e0e0e0;
  font-size: 0.95rem;
  line-height: 1.6;
}

.problem-card pre code .keyword { color: var(--neon-blue); }
.problem-card pre code .string { color: var(--neon-green); }
.problem-card pre code .number { color: var(--neon-orange); }
.problem-card pre code .comment { color: var(--neon-pink); opacity: 0.7; }

/* Enhanced blockquotes */
.problem-card blockquote {
  border-left: 4px solid var(--neon-blue);
  background: linear-gradient(135deg, 
    rgba(0, 255, 255, 0.05), 
    rgba(255, 0, 255, 0.05)
  );
  padding: 1.5rem;
  margin: 1.5rem 0;
  border-radius: 0 15px 15px 0;
  position: relative;
}

.problem-card blockquote::before {
  content: '"';
  font-size: 3rem;
  color: var(--neon-blue);
  position: absolute;
  top: -10px;
  left: 1rem;
  opacity: 0.4;
}

.problem-card blockquote p {
  margin: 0;
  color: #e0e0e0;
  font-style: italic;
  font-size: 1.1rem;
  line-height: 1.6;
}

/* Enhanced lists */
.problem-card ul, .problem-card ol {
  li {
    position: relative;
    padding-left: 1.5rem;
    margin-bottom: 0.75rem;
  }
  
  li::before {
    content: 'â—†';
    position: absolute;
    left: 0;
    color: var(--neon-blue);
    animation: pulse 2s infinite;
  }
}

/* Enhanced tables */
.problem-card table {
  background: rgba(20, 20, 20, 0.8);
  border: 1px solid var(--neon-blue);
  border-radius: 15px;
  overflow: hidden;
  margin: 1.5rem 0;
}

.problem-card table th {
  background: linear-gradient(135deg, var(--neon-blue), var(--neon-purple));
  color: #000;
  font-weight: 700;
  text-transform: uppercase;
  letter-spacing: 1px;
  padding: 1rem;
}

.problem-card table td {
  padding: 1rem;
  border-bottom: 1px solid rgba(0, 255, 255, 0.2);
  color: #e0e0e0;
}

.problem-card table tr:hover {
  background: rgba(0, 255, 255, 0.1);
}

/* Enhanced links */
.problem-card a {
  color: var(--neon-blue);
  text-decoration: none;
  position: relative;
  transition: all 0.3s ease;
}

.problem-card a::after {
  content: '';
  position: absolute;
  bottom: -2px;
  left: 0;
  width: 0;
  height: 2px;
  background: linear-gradient(90deg, var(--neon-blue), var(--neon-pink));
  transition: width 0.3s ease;
}

.problem-card a:hover {
  color: var(--neon-pink);
  text-shadow: 0 0 10px rgba(255, 0, 255, 0.5);
}

.problem-card a:hover::after {
  width: 100%;
}

/* Enhanced metadata badges */
.problem-meta .problem-category {
  background: linear-gradient(135deg, 
    rgba(0, 255, 255, 0.2), 
    rgba(57, 255, 20, 0.2)
  );
  border: 2px solid var(--neon-blue);
  padding: 0.5rem 1.5rem;
  border-radius: 20px;
  color: var(--neon-blue);
  font-weight: 600;
  font-family: 'Orbitron', monospace;
  text-transform: uppercase;
  letter-spacing: 1px;
  transition: all 0.3s ease;
  box-shadow: 0 0 20px rgba(0, 255, 255, 0.2);
}

.problem-meta .problem-category:hover {
  background: linear-gradient(135deg, 
    rgba(0, 255, 255, 0.3), 
    rgba(57, 255, 20, 0.3)
  );
  transform: translateY(-3px);
  box-shadow: 0 5px 25px rgba(0, 255, 255, 0.4);
}

.problem-meta .problem-reward {
  background: linear-gradient(135deg, #ffd700, #ffed4a, #ffd700);
  color: #000;
  padding: 0.75rem 1.5rem;
  border-radius: 25px;
  font-weight: 700;
  font-family: 'Orbitron', monospace;
  animation: rewardGlow 2s ease-in-out infinite alternate;
  border: 2px solid #ffd700;
  box-shadow: 0 0 30px rgba(255, 215, 0, 0.6);
  position: relative;
  overflow: hidden;
}

.problem-meta .problem-reward::before {
  content: 'ðŸ’Ž';
  margin-right: 0.5rem;
  animation: sparkle 1.5s ease-in-out infinite alternate;
}

.problem-meta .problem-reward::after {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, 
    transparent, 
    rgba(255, 255, 255, 0.4), 
    transparent
  );
  transition: left 0.5s ease;
}

.problem-meta .problem-reward:hover::after {
  left: 100%;
}

@keyframes sparkle {
  0% { transform: scale(1) rotate(0deg); }
  50% { transform: scale(1.2) rotate(180deg); }
  100% { transform: scale(1) rotate(360deg); }
}

/* Enhanced mobile responsiveness */
@media (max-width: 768px) {
  .problems-container {
    padding: 1rem 0.5rem;
  }
  
  .problems-container h1 {
    font-size: 2.5rem;
    margin-bottom: 2rem;
  }
  
  .problems-container h1::after {
    width: 150px;
  }
  
  .problem-card {
    padding: 2rem;
    border-radius: 20px;
    margin-bottom: 2rem;
  }
  
  .problem-header {
    flex-direction: column;
    align-items: flex-start;
    gap: 1rem;
  }
  
  .problem-title {
    font-size: 1.3rem;
    min-width: unset;
  }
  
  .problem-meta {
    flex-direction: column;
    align-items: flex-start;
    gap: 1rem;
  }
  
  .problem-math {
    padding: 1.5rem;
    font-size: 1rem;
  }
}

/* Enhanced focus states for accessibility */
.problem-card:focus-within {
  outline: 2px solid var(--neon-blue);
  outline-offset: 2px;
}

/* Enhanced loading states */
.problem-card.loading {
  animation: cardLoading 1.5s ease-in-out infinite;
}

@keyframes cardLoading {
  0%, 100% { opacity: 1; }
  50% { opacity: 0.7; }
}

/* Scrollbar styling */
::-webkit-scrollbar {
  width: 12px;
}

::-webkit-scrollbar-track {
  background: var(--dark-bg);
}

::-webkit-scrollbar-thumb {
  background: linear-gradient(45deg, var(--neon-blue), var(--neon-pink));
  border-radius: 6px;
}

::-webkit-scrollbar-thumb:hover {
  background: linear-gradient(45deg, var(--neon-pink), var(--neon-green));
}
